<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<description>Example configuration to get you started.</description>

	<context:component-scan base-package="com.sample.demo1" />

	<bean id="ds" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@Localhost:1521:xe" />
		<property name="username" value="hr" />
		<property name="password" value="zxcv1234" />
	</bean>
	<!-- 
		mybatis의 핵심객체인 SqlSession을 관리하는 SqlSessionFactory를 스프링의 Bean으로 등록한다.
	 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="ds" />
		<property name="configLocation" value="classpath:/META-INF/mybatis/mybatis-config.xml" />
	</bean>
	
	<!-- 
		MapperScannerConfigurer는 지정된 패키지에 정의된 모든 Mapper인터페이스를 읽어서
		Mapper인터페이스를 구현한 Mapper인스턴스(구현객체)를 전부 생성하고
		생성된 구현객체를 전부 스프링의 bean으로 등록한다.
	 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.sample.demo1.mappers" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
</beans>
